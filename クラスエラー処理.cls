VERSION 1.0 CLASS
BEGIN
  MultiUse = -1  'True
END
Attribute VB_Name = "クラスエラー処理"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = False
Attribute VB_Exposed = False
Option Explicit
'**************************************************************************************************************************
'*  機　能：クラスエラー処理
'*  概　要：エラー情報を管理するクラス
'*  補　足：
'**************************************************************************************************************************

Private モジュール名_ As String
Private プロシージャ名_ As String

Private Const エラー番号テンプレート As String = "{{エラー番号}}"
Private Const エラー情報テンプレート As String = "{{エラー情報}}"
Private Const エラーモジュール名テンプレート As String = "{{エラー発生モジュール名}}"
Private Const エラープロシージャ名テンプレート As String = "{{エラー発生プロシージャ名}}"

Private Const エラーメッセージテンプレート As String = _
    "エラーが発生しました。" & vbCrLf & vbCrLf & _
    "エラー番号：" & エラー番号テンプレート & vbCrLf & _
    "エラー情報：" & エラー情報テンプレート & vbCrLf & _
    "モジュール名：" & エラーモジュール名テンプレート & vbCrLf & _
    "ファンクション名：" & エラープロシージャ名テンプレート & vbCrLf & vbCrLf & _
    "※原因が分からない場合は、担当者へご連絡ください。"

'--------------------------------------------------------------------------------------------------------------------------
'コンストラクタ
'--------------------------------------------------------------------------------------------------------------------------
Private Sub Class_Initialize()

    モジュール名_ = ""
    プロシージャ名_ = ""
    'MsgBox "オブジェクト作成"

End Sub

'--------------------------------------------------------------------------------------------------------------------------
'デストラクタ
'--------------------------------------------------------------------------------------------------------------------------
Private Sub Class_Terminate()
    
    モジュール名_ = ""
    プロシージャ名_ = ""
    'MsgBox "開放"
    
End Sub
'--------------------------------------------------------------------------------------------------------------------------
'エラー情報をセットする（全てのプロシージャの「On Error GoTo」句で「Err.Raise」とともに使用）
'--------------------------------------------------------------------------------------------------------------------------
Public Sub Setエラー(ByVal モジュール名 As String, ByVal プロシージャ名 As String)
    
    ' 最初のエラーを設定する(すでにセットされていたらセットしない）
    If モジュール名_ = "" Then
        モジュール名_ = モジュール名
    End If
    If プロシージャ名_ = "" Then
        プロシージャ名_ = プロシージャ名
    End If

End Sub

'--------------------------------------------------------------------------------------------------------------------------
'エラーメッセージ表示（親プロシージャの「On Error GoTo」句で使用
'--------------------------------------------------------------------------------------------------------------------------
Public Sub Throwエラー()

        Dim エラーメッセージ As String
    
        エラーメッセージ = エラーメッセージテンプレート
        エラーメッセージ = Replace(エラーメッセージ, エラー番号テンプレート, Err.Number)
        エラーメッセージ = Replace(エラーメッセージ, エラー情報テンプレート, Err.Description)
        エラーメッセージ = Replace(エラーメッセージ, エラーモジュール名テンプレート, モジュール名_)
        エラーメッセージ = Replace(エラーメッセージ, エラープロシージャ名テンプレート, プロシージャ名_)
        
        Call MsgBox(エラーメッセージ, vbCritical, "エラー")
        
        Call Class_Terminate
        
End Sub
